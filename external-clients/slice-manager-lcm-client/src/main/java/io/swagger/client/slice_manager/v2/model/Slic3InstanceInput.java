/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Slic3InstanceInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class Slic3InstanceInput {

  @JsonProperty("user_id")
  private String userId = null;
  
  @JsonProperty("name")
  private String name = null;
  
  @JsonProperty("slic3_type_id")
  private String slic3TypeId = null;
  
  @JsonProperty("configurable_parameters")
  private List<Object> configurableParameters = null;
  
  public Slic3InstanceInput userId(String userId) {
    this.userId = userId;
    return this;
  }

  
  /**
  * Get userId
  * @return userId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }
  
  public Slic3InstanceInput name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Get name
  * @return name
  **/
  @ApiModelProperty(example = "slice_test", value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public Slic3InstanceInput slic3TypeId(String slic3TypeId) {
    this.slic3TypeId = slic3TypeId;
    return this;
  }

  
  /**
  * Get slic3TypeId
  * @return slic3TypeId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getSlic3TypeId() {
    return slic3TypeId;
  }
  public void setSlic3TypeId(String slic3TypeId) {
    this.slic3TypeId = slic3TypeId;
  }
  
  public Slic3InstanceInput configurableParameters(List<Object> configurableParameters) {
    this.configurableParameters = configurableParameters;
    return this;
  }

  public Slic3InstanceInput addConfigurableParametersItem(ConfigurableInputParameter configurableParametersItem) {
    
    if (this.configurableParameters == null) {
      this.configurableParameters = new ArrayList<Object>();
    }
    
    this.configurableParameters.add(configurableParametersItem);
    return this;
  }
  
  /**
  * Get configurableParameters
  * @return configurableParameters
  **/
  @ApiModelProperty(value = "")
  public List<Object> getConfigurableParameters() {
    return configurableParameters;
  }
  public void setConfigurableParameters(List<Object> configurableParameters) {
    this.configurableParameters = configurableParameters;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Slic3InstanceInput slic3InstanceInput = (Slic3InstanceInput) o;
    return Objects.equals(this.userId, slic3InstanceInput.userId) &&
        Objects.equals(this.name, slic3InstanceInput.name) &&
        Objects.equals(this.slic3TypeId, slic3InstanceInput.slic3TypeId) &&
        Objects.equals(this.configurableParameters, slic3InstanceInput.configurableParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, name, slic3TypeId, configurableParameters);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Slic3InstanceInput {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slic3TypeId: ").append(toIndentedString(slic3TypeId)).append("\n");
    sb.append("    configurableParameters: ").append(toIndentedString(configurableParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



