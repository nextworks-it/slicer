/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Slic3TypeInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class Slic3TypeInput {

  @JsonProperty("user_id")
  private String userId = null;
  
  @JsonProperty("slic3_temp_id")
  private String slic3TempId = null;
  
  @JsonProperty("name")
  private String name = null;
  
  @JsonProperty("version")
  private String version = null;
  
  @JsonProperty("description")
  private String description = null;
  
  @JsonProperty("attributes")
  private List<Object> attributes = null;
  
  @JsonProperty("configurable_parameters")
  private List<Object> configurableParameters = null;
  
  @JsonProperty("slice_blueprint")
  private Object sliceBlueprint = null;
  
  public Slic3TypeInput userId(String userId) {
    this.userId = userId;
    return this;
  }

  
  /**
  * Get userId
  * @return userId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }
  
  public Slic3TypeInput slic3TempId(String slic3TempId) {
    this.slic3TempId = slic3TempId;
    return this;
  }

  
  /**
  * Get slic3TempId
  * @return slic3TempId
  **/
  @ApiModelProperty(example = "5c63089158f568073093f70e", value = "")
  public String getSlic3TempId() {
    return slic3TempId;
  }
  public void setSlic3TempId(String slic3TempId) {
    this.slic3TempId = slic3TempId;
  }
  
  public Slic3TypeInput name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Get name
  * @return name
  **/
  @ApiModelProperty(example = "wifi_slice", value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public Slic3TypeInput version(String version) {
    this.version = version;
    return this;
  }

  
  /**
  * Get version
  * @return version
  **/
  @ApiModelProperty(example = "0.1", value = "")
  public String getVersion() {
    return version;
  }
  public void setVersion(String version) {
    this.version = version;
  }
  
  public Slic3TypeInput description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * Get description
  * @return description
  **/
  @ApiModelProperty(example = "WiFi Slice", value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public Slic3TypeInput attributes(List<Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Slic3TypeInput addAttributesItem(Object attributesItem) {
    
    if (this.attributes == null) {
      this.attributes = new ArrayList<Object>();
    }
    
    this.attributes.add(attributesItem);
    return this;
  }
  
  /**
  * Get attributes
  * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<Object> getAttributes() {
    return attributes;
  }
  public void setAttributes(List<Object> attributes) {
    this.attributes = attributes;
  }
  
  public Slic3TypeInput configurableParameters(List<Object> configurableParameters) {
    this.configurableParameters = configurableParameters;
    return this;
  }

  public Slic3TypeInput addConfigurableParametersItem(Object configurableParametersItem) {
    
    if (this.configurableParameters == null) {
      this.configurableParameters = new ArrayList<Object>();
    }
    
    this.configurableParameters.add(configurableParametersItem);
    return this;
  }
  
  /**
  * Get configurableParameters
  * @return configurableParameters
  **/
  @ApiModelProperty(value = "")
  public List<Object> getConfigurableParameters() {
    return configurableParameters;
  }
  public void setConfigurableParameters(List<Object> configurableParameters) {
    this.configurableParameters = configurableParameters;
  }
  
  public Slic3TypeInput sliceBlueprint(Object sliceBlueprint) {
    this.sliceBlueprint = sliceBlueprint;
    return this;
  }

  
  /**
  * Get sliceBlueprint
  * @return sliceBlueprint
  **/
  @ApiModelProperty(value = "")
  public Object getSliceBlueprint() {
    return sliceBlueprint;
  }
  public void setSliceBlueprint(Object sliceBlueprint) {
    this.sliceBlueprint = sliceBlueprint;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Slic3TypeInput slic3TypeInput = (Slic3TypeInput) o;
    return Objects.equals(this.userId, slic3TypeInput.userId) &&
        Objects.equals(this.slic3TempId, slic3TypeInput.slic3TempId) &&
        Objects.equals(this.name, slic3TypeInput.name) &&
        Objects.equals(this.version, slic3TypeInput.version) &&
        Objects.equals(this.description, slic3TypeInput.description) &&
        Objects.equals(this.attributes, slic3TypeInput.attributes) &&
        Objects.equals(this.configurableParameters, slic3TypeInput.configurableParameters) &&
        Objects.equals(this.sliceBlueprint, slic3TypeInput.sliceBlueprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, slic3TempId, name, version, description, attributes, configurableParameters, sliceBlueprint);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Slic3TypeInput {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    slic3TempId: ").append(toIndentedString(slic3TempId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    configurableParameters: ").append(toIndentedString(configurableParameters)).append("\n");
    sb.append("    sliceBlueprint: ").append(toIndentedString(sliceBlueprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



