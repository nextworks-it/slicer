/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * PutRadioChunk
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class PutRadioChunk {

  @JsonProperty("name")
  private String name = null;
  
  @JsonProperty("user_id")
  private String userId = null;
  
  @JsonProperty("selectedPhys")
  private List<String> selectedPhys = null;
  
  @JsonProperty("selectedLinks")
  private List<String> selectedLinks = null;
  
  public PutRadioChunk name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Get name
  * @return name
  **/
  @ApiModelProperty(example = "RadioChunk", value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public PutRadioChunk userId(String userId) {
    this.userId = userId;
    return this;
  }

  
  /**
  * Get userId
  * @return userId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }
  
  public PutRadioChunk selectedPhys(List<String> selectedPhys) {
    this.selectedPhys = selectedPhys;
    return this;
  }

  public PutRadioChunk addSelectedPhysItem(String selectedPhysItem) {
    
    if (this.selectedPhys == null) {
      this.selectedPhys = new ArrayList<String>();
    }
    
    this.selectedPhys.add(selectedPhysItem);
    return this;
  }
  
  /**
  * Get selectedPhys
  * @return selectedPhys
  **/
  @ApiModelProperty(value = "")
  public List<String> getSelectedPhys() {
    return selectedPhys;
  }
  public void setSelectedPhys(List<String> selectedPhys) {
    this.selectedPhys = selectedPhys;
  }
  
  public PutRadioChunk selectedLinks(List<String> selectedLinks) {
    this.selectedLinks = selectedLinks;
    return this;
  }

  public PutRadioChunk addSelectedLinksItem(String selectedLinksItem) {
    
    if (this.selectedLinks == null) {
      this.selectedLinks = new ArrayList<String>();
    }
    
    this.selectedLinks.add(selectedLinksItem);
    return this;
  }
  
  /**
  * Get selectedLinks
  * @return selectedLinks
  **/
  @ApiModelProperty(value = "")
  public List<String> getSelectedLinks() {
    return selectedLinks;
  }
  public void setSelectedLinks(List<String> selectedLinks) {
    this.selectedLinks = selectedLinks;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutRadioChunk putRadioChunk = (PutRadioChunk) o;
    return Objects.equals(this.name, putRadioChunk.name) &&
        Objects.equals(this.userId, putRadioChunk.userId) &&
        Objects.equals(this.selectedPhys, putRadioChunk.selectedPhys) &&
        Objects.equals(this.selectedLinks, putRadioChunk.selectedLinks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, userId, selectedPhys, selectedLinks);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutRadioChunk {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    selectedPhys: ").append(toIndentedString(selectedPhys)).append("\n");
    sb.append("    selectedLinks: ").append(toIndentedString(selectedLinks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



