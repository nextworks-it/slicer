/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ComputeChunkInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class ComputeChunkInput {

  @JsonProperty("name")
  private String name = null;
  
  @JsonProperty("user_id")
  private String userId = null;
  
  @JsonProperty("username")
  private String username = null;
  
  @JsonProperty("password")
  private String password = null;
  
  @JsonProperty("description")
  private String description = null;
  
  @JsonProperty("compute_id")
  private String computeId = null;
  
  @JsonProperty("requirements")
  private Object requirements = null;
  
  public ComputeChunkInput name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Get name
  * @return name
  **/
  @ApiModelProperty(example = "nova", value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public ComputeChunkInput userId(String userId) {
    this.userId = userId;
    return this;
  }

  
  /**
  * Get userId
  * @return userId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }
  
  public ComputeChunkInput username(String username) {
    this.username = username;
    return this;
  }

  
  /**
  * Get username
  * @return username
  **/
  @ApiModelProperty(example = "username", value = "")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }
  
  public ComputeChunkInput password(String password) {
    this.password = password;
    return this;
  }

  
  /**
  * Get password
  * @return password
  **/
  @ApiModelProperty(example = "password", value = "")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  
  public ComputeChunkInput description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * Get description
  * @return description
  **/
  @ApiModelProperty(example = "Compute node 1 on test-bed 2", value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public ComputeChunkInput computeId(String computeId) {
    this.computeId = computeId;
    return this;
  }

  
  /**
  * Get computeId
  * @return computeId
  **/
  @ApiModelProperty(example = "5b63089158f568073093f70d", value = "")
  public String getComputeId() {
    return computeId;
  }
  public void setComputeId(String computeId) {
    this.computeId = computeId;
  }
  
  public ComputeChunkInput requirements(Object requirements) {
    this.requirements = requirements;
    return this;
  }

  
  /**
  * Get requirements
  * @return requirements
  **/
  @ApiModelProperty(value = "")
  public Object getRequirements() {
    return requirements;
  }
  public void setRequirements(Object requirements) {
    this.requirements = requirements;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComputeChunkInput computeChunkInput = (ComputeChunkInput) o;
    return Objects.equals(this.name, computeChunkInput.name) &&
        Objects.equals(this.userId, computeChunkInput.userId) &&
        Objects.equals(this.username, computeChunkInput.username) &&
        Objects.equals(this.password, computeChunkInput.password) &&
        Objects.equals(this.description, computeChunkInput.description) &&
        Objects.equals(this.computeId, computeChunkInput.computeId) &&
        Objects.equals(this.requirements, computeChunkInput.requirements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, userId, username, password, description, computeId, requirements);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComputeChunkInput {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    computeId: ").append(toIndentedString(computeId)).append("\n");
    sb.append("    requirements: ").append(toIndentedString(requirements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



