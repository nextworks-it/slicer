/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ComputeChunkNewRAMInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class ComputeChunkNewRAMInput {

  @JsonProperty("ram")
  private Object ram = null;
  
  public ComputeChunkNewRAMInput ram(Object ram) {
    this.ram = ram;
    return this;
  }

  
  /**
  * Get ram
  * @return ram
  **/
  @ApiModelProperty(value = "")
  public Object getRam() {
    return ram;
  }
  public void setRam(Object ram) {
    this.ram = ram;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComputeChunkNewRAMInput computeChunkNewRAMInput = (ComputeChunkNewRAMInput) o;
    return Objects.equals(this.ram, computeChunkNewRAMInput.ram);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ram);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComputeChunkNewRAMInput {\n");
    
    sb.append("    ram: ").append(toIndentedString(ram)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



