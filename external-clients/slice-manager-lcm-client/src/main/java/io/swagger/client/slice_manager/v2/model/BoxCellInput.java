/*
 * Slice Manager API
 * This API provides interaction between the N-NaaS platform and the Slice Manager.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.slice_manager.v2.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * BoxCellInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2022-05-17T10:16:59.588+02:00")
public class BoxCellInput {

  @JsonProperty("cellId")
  private Integer cellId = null;
  
  @JsonProperty("physicalCellId")
  private Integer physicalCellId = null;
  
  @JsonProperty("selectedRFPort")
  private Integer selectedRFPort = null;
  
  @JsonProperty("type")
  private String type = null;
  
  public BoxCellInput cellId(Integer cellId) {
    this.cellId = cellId;
    return this;
  }

  
  /**
  * Get cellId
  * @return cellId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getCellId() {
    return cellId;
  }
  public void setCellId(Integer cellId) {
    this.cellId = cellId;
  }
  
  public BoxCellInput physicalCellId(Integer physicalCellId) {
    this.physicalCellId = physicalCellId;
    return this;
  }

  
  /**
  * Get physicalCellId
  * @return physicalCellId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getPhysicalCellId() {
    return physicalCellId;
  }
  public void setPhysicalCellId(Integer physicalCellId) {
    this.physicalCellId = physicalCellId;
  }
  
  public BoxCellInput selectedRFPort(Integer selectedRFPort) {
    this.selectedRFPort = selectedRFPort;
    return this;
  }

  
  /**
  * Get selectedRFPort
  * @return selectedRFPort
  **/
  @ApiModelProperty(example = "0", value = "")
  public Integer getSelectedRFPort() {
    return selectedRFPort;
  }
  public void setSelectedRFPort(Integer selectedRFPort) {
    this.selectedRFPort = selectedRFPort;
  }
  
  public BoxCellInput type(String type) {
    this.type = type;
    return this;
  }

  
  /**
  * Get type
  * @return type
  **/
  @ApiModelProperty(example = "4G-TDD", value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoxCellInput boxCellInput = (BoxCellInput) o;
    return Objects.equals(this.cellId, boxCellInput.cellId) &&
        Objects.equals(this.physicalCellId, boxCellInput.physicalCellId) &&
        Objects.equals(this.selectedRFPort, boxCellInput.selectedRFPort) &&
        Objects.equals(this.type, boxCellInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cellId, physicalCellId, selectedRFPort, type);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoxCellInput {\n");
    
    sb.append("    cellId: ").append(toIndentedString(cellId)).append("\n");
    sb.append("    physicalCellId: ").append(toIndentedString(physicalCellId)).append("\n");
    sb.append("    selectedRFPort: ").append(toIndentedString(selectedRFPort)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



