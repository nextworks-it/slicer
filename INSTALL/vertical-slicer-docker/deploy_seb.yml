- hosts: all
  become: true
  tasks:
  
  - name: update repository
    apt:
      update_cache: yes

  - name: install docker requirements
    apt:
      name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      update_cache: yes
  
  - name: add dockerâ€™s official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: get ubuntu version
    shell: echo $(lsb_release -cs)
    register: var
  
  - name: get repository of docker engine
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ var.stdout }} stable
      state: present
  
  - name: update repository
    apt:
      update_cache: yes

  - name: install docker engine
    apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      update_cache: yes

  - name: get ubuntu version
    shell: echo $(uname -s)
    register: var1
  
  - name: get ubuntu version
    shell: echo $(uname -m)
    register: var2

  - name: checking docker compose
    stat:
      path: /usr/local/bin/docker-compose
    register: isDockerCompose

  - name: install docker compose
    uri:
      url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-{{ var1.stdout }}-{{ var2.stdout }}
      dest: /usr/local/bin/docker-compose
    when: not isDockerCompose.stat.exists

  - name: install docker compose
    file:
      path: /usr/local/bin/docker-compose
      mode: a+x
    when: not isDockerCompose.stat.exists  

  - name: installing services
    shell: docker-compose up -d

  - name: building slicer service
    shell: docker build -t nxw_vslicer .

  - name: launching slicer service
    shell: docker run --publish 8082:8082 --detach --privileged --name nxw_vslicer nxw_vslicer /sbin/init