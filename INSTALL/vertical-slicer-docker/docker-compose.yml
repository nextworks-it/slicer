version: '3.3'

services:

  postgres:
    image: postgres:10-alpine
    restart: always
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      # below the sql script for multiple dbs
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      POSTGRES_DB: cataloguedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    volumes:
    # mount local .docker/rabbitmq/etc/ directory as /etc/rabbitmq/ in the container (if mounted it fail)
    #  - ./volumes/rabbitmq/etc/:/etc/rabbitmq/
    # mount local .docker/rabbitmq/data/ directory as /var/lib/rabbitmq/ in the container
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
    # mount local .docker/rabbitmq/logs/ directory as /var/log/rabbitmq/ in the container
      - ./volumes/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
      - 5672:5672
      - 15672:15672
  
  sebastian:
    container_name: sebastian
    build:
      context: .
      dockerfile: ./sebastian/Dockerfile
    ports:
    #validate this
      - 8082:8082
      #for debugging
      - 5005:5005
    command: >
      bash -c "/usr/bin/java -jar /home/ubuntu/slicer/SEBASTIAN/SEBASTIAN_CORE/target/SEBASTIAN_CORE-0.0.2-SNAPSHOT.jar
      --spring.config.location=/home/ubuntu/slicer/sebastian_application.properties"
    
  angular_gui:
    container_name: angular_gui
    build:
      context: .
      dockerfile: ./angular/Dockerfile
    ports:
      - 80:80
    #command: >
    #  bash -c "service apache2 start && apachectl -D FOREGROUND"
    #  bash -c "cd /usr/src/app/app-ui &&
    #  npm start --host=0.0.0.0 --disable-host-check"