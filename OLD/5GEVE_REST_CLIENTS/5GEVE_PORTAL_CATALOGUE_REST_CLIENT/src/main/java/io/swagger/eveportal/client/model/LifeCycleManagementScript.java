/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LifeCycleManagementScript
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class LifeCycleManagementScript {
  /**
   * Gets or Sets event
   */
  @JsonAdapter(EventEnum.Adapter.class)
  public enum EventEnum {
    START_VNF_INSTANTIATION("START_VNF_INSTANTIATION"),
    
    END_VNF_INSTANTIATION("END_VNF_INSTANTIATION"),
    
    START_VNF_SCALING("START_VNF_SCALING"),
    
    END_VNF_SCALING("END_VNF_SCALING"),
    
    START_VNF_HEALING("START_VNF_HEALING"),
    
    END_VNF_HEALING("END_VNF_HEALING"),
    
    START_VNF_TERMINATION("START_VNF_TERMINATION"),
    
    END_VNF_TERMINATION("END_VNF_TERMINATION"),
    
    START_VNF_FLAVOUR_CHANGE("START_VNF_FLAVOUR_CHANGE"),
    
    END_VNF_FLAVOUR_CHANGE("END_VNF_FLAVOUR_CHANGE"),
    
    START_VNF_OP_STATE_CHANGE("START_VNF_OP_STATE_CHANGE"),
    
    END_VNF_OP_STATE_CHANGE("END_VNF_OP_STATE_CHANGE"),
    
    START_CHANGE_VNF_EXTERNAL_CONNECTIVITY("START_CHANGE_VNF_EXTERNAL_CONNECTIVITY"),
    
    END_CHANGE_VNF_EXTERNAL_CONNECTIVITY("END_CHANGE_VNF_EXTERNAL_CONNECTIVITY"),
    
    RECEIVED_MSG_VNF_INSTANTIATE("RECEIVED_MSG_VNF_INSTANTIATE"),
    
    RECEIVED_MSG_VNF_SCALE("RECEIVED_MSG_VNF_SCALE"),
    
    RECEIVED_MSG_VNF_HEAL("RECEIVED_MSG_VNF_HEAL"),
    
    RECEIVED_MSG_VNF_TERMINATE("RECEIVED_MSG_VNF_TERMINATE"),
    
    RECEIVED_MSG_CHANGE_VNF_FLAVOUR("RECEIVED_MSG_CHANGE_VNF_FLAVOUR"),
    
    RECEIVED_MSG_CHANGE_VNF_EXTERNAL_CONNECTIVITY("RECEIVED_MSG_CHANGE_VNF_EXTERNAL_CONNECTIVITY"),
    
    RECEIVED_MSG_CHANGE_VNF_OP_STATE("RECEIVED_MSG_CHANGE_VNF_OP_STATE"),
    
    RECEIVED_MSG_VNF_CHANGE_INDICATION("RECEIVED_MSG_VNF_CHANGE_INDICATION"),
    
    START_NS_INSTANTIATION("START_NS_INSTANTIATION"),
    
    END_NS_INSTANTIATION("END_NS_INSTANTIATION"),
    
    START_NS_SCALING("START_NS_SCALING"),
    
    END_NS_SCALING("END_NS_SCALING"),
    
    START_NS_HEALING("START_NS_HEALING"),
    
    END_NS_HEALING("END_NS_HEALING"),
    
    START_NS_TERMINATION("START_NS_TERMINATION"),
    
    END_NS_TERMINATION("END_NS_TERMINATION"),
    
    START_NS_UPDATE("START_NS_UPDATE"),
    
    END_NS_UPDATE("END_NS_UPDATE"),
    
    RECEIVED_MSG_NS_INSTANTIATE("RECEIVED_MSG_NS_INSTANTIATE"),
    
    RECEIVED_MSG_NS_SCALE("RECEIVED_MSG_NS_SCALE"),
    
    RECEIVED_MSG_NS_HEAL("RECEIVED_MSG_NS_HEAL"),
    
    RECEIVED_MSG_NS_TERMINATE("RECEIVED_MSG_NS_TERMINATE"),
    
    RECEIVED_MSG_NS_UPDATE("RECEIVED_MSG_NS_UPDATE");

    private String value;

    EventEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EventEnum fromValue(String text) {
      for (EventEnum b : EventEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EventEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EventEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EventEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("event")
  private List<EventEnum> event = null;

  @SerializedName("script")
  private String script = null;

  public LifeCycleManagementScript event(List<EventEnum> event) {
    this.event = event;
    return this;
  }

  public LifeCycleManagementScript addEventItem(EventEnum eventItem) {
    if (this.event == null) {
      this.event = new ArrayList<EventEnum>();
    }
    this.event.add(eventItem);
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(value = "")
  public List<EventEnum> getEvent() {
    return event;
  }

  public void setEvent(List<EventEnum> event) {
    this.event = event;
  }

  public LifeCycleManagementScript script(String script) {
    this.script = script;
    return this;
  }

   /**
   * Get script
   * @return script
  **/
  @ApiModelProperty(value = "")
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LifeCycleManagementScript lifeCycleManagementScript = (LifeCycleManagementScript) o;
    return Objects.equals(this.event, lifeCycleManagementScript.event) &&
        Objects.equals(this.script, lifeCycleManagementScript.script);
  }

  @Override
  public int hashCode() {
    return Objects.hash(event, script);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LifeCycleManagementScript {\n");
    
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

