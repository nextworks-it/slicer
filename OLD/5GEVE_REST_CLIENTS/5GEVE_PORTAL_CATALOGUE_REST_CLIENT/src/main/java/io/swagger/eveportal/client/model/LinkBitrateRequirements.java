/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * LinkBitrateRequirements
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class LinkBitrateRequirements {
  @SerializedName("leaf")
  private String leaf = null;

  @SerializedName("root")
  private String root = null;

  public LinkBitrateRequirements leaf(String leaf) {
    this.leaf = leaf;
    return this;
  }

   /**
   * Get leaf
   * @return leaf
  **/
  @ApiModelProperty(value = "")
  public String getLeaf() {
    return leaf;
  }

  public void setLeaf(String leaf) {
    this.leaf = leaf;
  }

  public LinkBitrateRequirements root(String root) {
    this.root = root;
    return this;
  }

   /**
   * Get root
   * @return root
  **/
  @ApiModelProperty(value = "")
  public String getRoot() {
    return root;
  }

  public void setRoot(String root) {
    this.root = root;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkBitrateRequirements linkBitrateRequirements = (LinkBitrateRequirements) o;
    return Objects.equals(this.leaf, linkBitrateRequirements.leaf) &&
        Objects.equals(this.root, linkBitrateRequirements.root);
  }

  @Override
  public int hashCode() {
    return Objects.hash(leaf, root);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkBitrateRequirements {\n");
    
    sb.append("    leaf: ").append(toIndentedString(leaf)).append("\n");
    sb.append("    root: ").append(toIndentedString(root)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

