swagger: "2.0"
info:
  description: "RBAC module for 5G-EVE portal"
  version: "0.0.1"
  title: "5G-EVE RBAC module"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "gigarcia@it.uc3m.es"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "www.5g-eve.eu"
basePath: "/portal/rbac"
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      tags:
      - "Authentication"
      summary: ""
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/userLogin'
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "Access and refresh token pair"

  /register:
    post:
      tags:
      - "Authentication"
      summary: ""
      description: ""
      operationId: "register"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/userRegistration'
      responses:
        400:
          description: Bad request due to missing parameters
        201:
          description: ""

  /logout:
    get:
      tags:
      - "Authentication"
      summary: ""
      description: ""
      operationId: "logout"
      responses:
        401:
          description: token not provided
      security:
        - api_key: []
        

  /extra/use-cases:
    get:
      tags:
      - "Use Cases"
      summary: "Obtains use cases asigned to a specific user"
      description: ""
      operationId: "getUseCases"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/useCases'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        200:
          description: "List of use cases assigned to the user"
      security:
        - api_key: []    
    post:
      tags:
      - "Use Cases"
      summary: ""
      description: "Appends new use cases to a specific user"
      operationId: "addUseCases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/useCases'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        204:
          description: ""
      security:
        - api_key: []
    delete:
      tags:
      - "Use Cases"
      summary: ""
      description: "Removes assigned use cases to a specific user"
      operationId: "deleteUseCases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/useCases'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        204:
          description: ""
      security:
        - api_key: []  

  /extra/managed-sites:
    get:
      tags:
      - "Managed Sites"
      summary: "Retrieval of site facilities managed by a specific user"
      description: ""
      operationId: "getManagedSites"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/managedSites'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        200:
          description: "List of managed sites assotiated to a specific user"
      security:
        - api_key: []    
    post:
      tags:
      - "Managed Sites"
      summary: ""
      description: "Appends new site facilities to a specific user (being the real site manager)"
      operationId: "addManagedSites"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/managedSites'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        204:
          description: ""
      security:
        - api_key: []
    delete:
      tags:
      - "Managed Sites"
      summary: ""
      description: "Removes assigned sites to a specific user"
      operationId: "deleteManagedSites"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/managedSites'
      responses:
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        204:
          description: ""
      security:
        - api_key: [] 
        
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Bearer"
    in: "header"
definitions:
  userLogin:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      email:
        type: string
        description: ""
      password:
        type: string
        description: ""
  userRegistration:
    type: "object"
    required:
    - "email"
    - "username"
    - "firstName"
    - "lastName"
    - "password"
    - "project"
    properties:
      email:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
  useCases:
    type: "object"
    required:
    - "use_cases"
    properties:
      use_cases:
        type: array
        items:
          type: string
        description: ""
  managedSites:
    type: "object"
    required:
    - "managed_sites"
    properties:
      managed_sites:
        type: array
        items:
          type: string
        description: ""        
