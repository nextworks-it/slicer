/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;

/**
 * TestCaseDescriptor
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class TestCaseDescriptor {
  @SerializedName("name")
  private String name = null;

  @SerializedName("public")
  private Boolean _public = null;

  @SerializedName("testCaseBlueprintId")
  private String testCaseBlueprintId = null;

  @SerializedName("testCaseDescriptorId")
  private String testCaseDescriptorId = null;

  @SerializedName("userParameters")
  private Map<String, String> userParameters = null;

  @SerializedName("version")
  private String version = null;

  public TestCaseDescriptor name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestCaseDescriptor _public(Boolean _public) {
    this._public = _public;
    return this;
  }

   /**
   * Get _public
   * @return _public
  **/
  @ApiModelProperty(value = "")
  public Boolean isPublic() {
    return _public;
  }

  public void setPublic(Boolean _public) {
    this._public = _public;
  }

  public TestCaseDescriptor testCaseBlueprintId(String testCaseBlueprintId) {
    this.testCaseBlueprintId = testCaseBlueprintId;
    return this;
  }

   /**
   * Get testCaseBlueprintId
   * @return testCaseBlueprintId
  **/
  @ApiModelProperty(value = "")
  public String getTestCaseBlueprintId() {
    return testCaseBlueprintId;
  }

  public void setTestCaseBlueprintId(String testCaseBlueprintId) {
    this.testCaseBlueprintId = testCaseBlueprintId;
  }

  public TestCaseDescriptor testCaseDescriptorId(String testCaseDescriptorId) {
    this.testCaseDescriptorId = testCaseDescriptorId;
    return this;
  }

   /**
   * Get testCaseDescriptorId
   * @return testCaseDescriptorId
  **/
  @ApiModelProperty(value = "")
  public String getTestCaseDescriptorId() {
    return testCaseDescriptorId;
  }

  public void setTestCaseDescriptorId(String testCaseDescriptorId) {
    this.testCaseDescriptorId = testCaseDescriptorId;
  }

  public TestCaseDescriptor userParameters(Map<String, String> userParameters) {
    this.userParameters = userParameters;
    return this;
  }

  public TestCaseDescriptor putUserParametersItem(String key, String userParametersItem) {
    if (this.userParameters == null) {
      this.userParameters = new HashMap<String, String>();
    }
    this.userParameters.put(key, userParametersItem);
    return this;
  }

   /**
   * Get userParameters
   * @return userParameters
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getUserParameters() {
    return userParameters;
  }

  public void setUserParameters(Map<String, String> userParameters) {
    this.userParameters = userParameters;
  }

  public TestCaseDescriptor version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCaseDescriptor testCaseDescriptor = (TestCaseDescriptor) o;
    return Objects.equals(this.name, testCaseDescriptor.name) &&
        Objects.equals(this._public, testCaseDescriptor._public) &&
        Objects.equals(this.testCaseBlueprintId, testCaseDescriptor.testCaseBlueprintId) &&
        Objects.equals(this.testCaseDescriptorId, testCaseDescriptor.testCaseDescriptorId) &&
        Objects.equals(this.userParameters, testCaseDescriptor.userParameters) &&
        Objects.equals(this.version, testCaseDescriptor.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, _public, testCaseBlueprintId, testCaseDescriptorId, userParameters, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCaseDescriptor {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    testCaseBlueprintId: ").append(toIndentedString(testCaseBlueprintId)).append("\n");
    sb.append("    testCaseDescriptorId: ").append(toIndentedString(testCaseDescriptorId)).append("\n");
    sb.append("    userParameters: ").append(toIndentedString(userParameters)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

