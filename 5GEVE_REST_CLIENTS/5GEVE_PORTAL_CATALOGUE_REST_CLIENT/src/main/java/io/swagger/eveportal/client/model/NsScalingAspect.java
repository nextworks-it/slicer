/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * NsScalingAspect
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class NsScalingAspect {
  @SerializedName("description")
  private String description = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nsScaleLevel")
  private List<NsLevel> nsScaleLevel = null;

  @SerializedName("nsScalingAspectId")
  private String nsScalingAspectId = null;

  public NsScalingAspect description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NsScalingAspect name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NsScalingAspect nsScaleLevel(List<NsLevel> nsScaleLevel) {
    this.nsScaleLevel = nsScaleLevel;
    return this;
  }

  public NsScalingAspect addNsScaleLevelItem(NsLevel nsScaleLevelItem) {
    if (this.nsScaleLevel == null) {
      this.nsScaleLevel = new ArrayList<NsLevel>();
    }
    this.nsScaleLevel.add(nsScaleLevelItem);
    return this;
  }

   /**
   * Get nsScaleLevel
   * @return nsScaleLevel
  **/
  @ApiModelProperty(value = "")
  public List<NsLevel> getNsScaleLevel() {
    return nsScaleLevel;
  }

  public void setNsScaleLevel(List<NsLevel> nsScaleLevel) {
    this.nsScaleLevel = nsScaleLevel;
  }

  public NsScalingAspect nsScalingAspectId(String nsScalingAspectId) {
    this.nsScalingAspectId = nsScalingAspectId;
    return this;
  }

   /**
   * Get nsScalingAspectId
   * @return nsScalingAspectId
  **/
  @ApiModelProperty(value = "")
  public String getNsScalingAspectId() {
    return nsScalingAspectId;
  }

  public void setNsScalingAspectId(String nsScalingAspectId) {
    this.nsScalingAspectId = nsScalingAspectId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsScalingAspect nsScalingAspect = (NsScalingAspect) o;
    return Objects.equals(this.description, nsScalingAspect.description) &&
        Objects.equals(this.name, nsScalingAspect.name) &&
        Objects.equals(this.nsScaleLevel, nsScalingAspect.nsScaleLevel) &&
        Objects.equals(this.nsScalingAspectId, nsScalingAspect.nsScalingAspectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, nsScaleLevel, nsScalingAspectId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsScalingAspect {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nsScaleLevel: ").append(toIndentedString(nsScaleLevel)).append("\n");
    sb.append("    nsScalingAspectId: ").append(toIndentedString(nsScalingAspectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

