/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ExpBlueprint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class ExpBlueprint {
  @SerializedName("ctxBlueprintIds")
  private List<String> ctxBlueprintIds = null;

  /**
   * Gets or Sets deploymentType
   */
  @JsonAdapter(DeploymentTypeEnum.Adapter.class)
  public enum DeploymentTypeEnum {
    ON_DEMAND("ON_DEMAND"),
    
    STATIC("STATIC");

    private String value;

    DeploymentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeploymentTypeEnum fromValue(String text) {
      for (DeploymentTypeEnum b : DeploymentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeploymentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeploymentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeploymentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeploymentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("deploymentType")
  private DeploymentTypeEnum deploymentType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("expBlueprintId")
  private String expBlueprintId = null;

  @SerializedName("kpis")
  private List<KeyPerformanceIndicator> kpis = null;

  @SerializedName("metrics")
  private List<InfrastructureMetric> metrics = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets sites
   */
  @JsonAdapter(SitesEnum.Adapter.class)
  public enum SitesEnum {
    ITALY_TURIN("ITALY_TURIN"),
    
    SPAIN_5TONIC("SPAIN_5TONIC"),
    
    FRANCE_PARIS("FRANCE_PARIS"),
    
    FRANCE_NICE("FRANCE_NICE"),
    
    FRANCE_RENNES("FRANCE_RENNES"),
    
    GREECE_ATHENS("GREECE_ATHENS");

    private String value;

    SitesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SitesEnum fromValue(String text) {
      for (SitesEnum b : SitesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SitesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SitesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SitesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SitesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("sites")
  private List<SitesEnum> sites = null;

  @SerializedName("tcBlueprintIds")
  private List<String> tcBlueprintIds = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("vsBlueprintId")
  private String vsBlueprintId = null;

  public ExpBlueprint ctxBlueprintIds(List<String> ctxBlueprintIds) {
    this.ctxBlueprintIds = ctxBlueprintIds;
    return this;
  }

  public ExpBlueprint addCtxBlueprintIdsItem(String ctxBlueprintIdsItem) {
    if (this.ctxBlueprintIds == null) {
      this.ctxBlueprintIds = new ArrayList<String>();
    }
    this.ctxBlueprintIds.add(ctxBlueprintIdsItem);
    return this;
  }

   /**
   * Get ctxBlueprintIds
   * @return ctxBlueprintIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getCtxBlueprintIds() {
    return ctxBlueprintIds;
  }

  public void setCtxBlueprintIds(List<String> ctxBlueprintIds) {
    this.ctxBlueprintIds = ctxBlueprintIds;
  }

  public ExpBlueprint deploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
    return this;
  }

   /**
   * Get deploymentType
   * @return deploymentType
  **/
  @ApiModelProperty(value = "")
  public DeploymentTypeEnum getDeploymentType() {
    return deploymentType;
  }

  public void setDeploymentType(DeploymentTypeEnum deploymentType) {
    this.deploymentType = deploymentType;
  }

  public ExpBlueprint description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ExpBlueprint expBlueprintId(String expBlueprintId) {
    this.expBlueprintId = expBlueprintId;
    return this;
  }

   /**
   * Get expBlueprintId
   * @return expBlueprintId
  **/
  @ApiModelProperty(value = "")
  public String getExpBlueprintId() {
    return expBlueprintId;
  }

  public void setExpBlueprintId(String expBlueprintId) {
    this.expBlueprintId = expBlueprintId;
  }

  public ExpBlueprint kpis(List<KeyPerformanceIndicator> kpis) {
    this.kpis = kpis;
    return this;
  }

  public ExpBlueprint addKpisItem(KeyPerformanceIndicator kpisItem) {
    if (this.kpis == null) {
      this.kpis = new ArrayList<KeyPerformanceIndicator>();
    }
    this.kpis.add(kpisItem);
    return this;
  }

   /**
   * Get kpis
   * @return kpis
  **/
  @ApiModelProperty(value = "")
  public List<KeyPerformanceIndicator> getKpis() {
    return kpis;
  }

  public void setKpis(List<KeyPerformanceIndicator> kpis) {
    this.kpis = kpis;
  }

  public ExpBlueprint metrics(List<InfrastructureMetric> metrics) {
    this.metrics = metrics;
    return this;
  }

  public ExpBlueprint addMetricsItem(InfrastructureMetric metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<InfrastructureMetric>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @ApiModelProperty(value = "")
  public List<InfrastructureMetric> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<InfrastructureMetric> metrics) {
    this.metrics = metrics;
  }

  public ExpBlueprint name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ExpBlueprint sites(List<SitesEnum> sites) {
    this.sites = sites;
    return this;
  }

  public ExpBlueprint addSitesItem(SitesEnum sitesItem) {
    if (this.sites == null) {
      this.sites = new ArrayList<SitesEnum>();
    }
    this.sites.add(sitesItem);
    return this;
  }

   /**
   * Get sites
   * @return sites
  **/
  @ApiModelProperty(value = "")
  public List<SitesEnum> getSites() {
    return sites;
  }

  public void setSites(List<SitesEnum> sites) {
    this.sites = sites;
  }

  public ExpBlueprint tcBlueprintIds(List<String> tcBlueprintIds) {
    this.tcBlueprintIds = tcBlueprintIds;
    return this;
  }

  public ExpBlueprint addTcBlueprintIdsItem(String tcBlueprintIdsItem) {
    if (this.tcBlueprintIds == null) {
      this.tcBlueprintIds = new ArrayList<String>();
    }
    this.tcBlueprintIds.add(tcBlueprintIdsItem);
    return this;
  }

   /**
   * Get tcBlueprintIds
   * @return tcBlueprintIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getTcBlueprintIds() {
    return tcBlueprintIds;
  }

  public void setTcBlueprintIds(List<String> tcBlueprintIds) {
    this.tcBlueprintIds = tcBlueprintIds;
  }

  public ExpBlueprint version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ExpBlueprint vsBlueprintId(String vsBlueprintId) {
    this.vsBlueprintId = vsBlueprintId;
    return this;
  }

   /**
   * Get vsBlueprintId
   * @return vsBlueprintId
  **/
  @ApiModelProperty(value = "")
  public String getVsBlueprintId() {
    return vsBlueprintId;
  }

  public void setVsBlueprintId(String vsBlueprintId) {
    this.vsBlueprintId = vsBlueprintId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpBlueprint expBlueprint = (ExpBlueprint) o;
    return Objects.equals(this.ctxBlueprintIds, expBlueprint.ctxBlueprintIds) &&
        Objects.equals(this.deploymentType, expBlueprint.deploymentType) &&
        Objects.equals(this.description, expBlueprint.description) &&
        Objects.equals(this.expBlueprintId, expBlueprint.expBlueprintId) &&
        Objects.equals(this.kpis, expBlueprint.kpis) &&
        Objects.equals(this.metrics, expBlueprint.metrics) &&
        Objects.equals(this.name, expBlueprint.name) &&
        Objects.equals(this.sites, expBlueprint.sites) &&
        Objects.equals(this.tcBlueprintIds, expBlueprint.tcBlueprintIds) &&
        Objects.equals(this.version, expBlueprint.version) &&
        Objects.equals(this.vsBlueprintId, expBlueprint.vsBlueprintId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ctxBlueprintIds, deploymentType, description, expBlueprintId, kpis, metrics, name, sites, tcBlueprintIds, version, vsBlueprintId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpBlueprint {\n");
    
    sb.append("    ctxBlueprintIds: ").append(toIndentedString(ctxBlueprintIds)).append("\n");
    sb.append("    deploymentType: ").append(toIndentedString(deploymentType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expBlueprintId: ").append(toIndentedString(expBlueprintId)).append("\n");
    sb.append("    kpis: ").append(toIndentedString(kpis)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sites: ").append(toIndentedString(sites)).append("\n");
    sb.append("    tcBlueprintIds: ").append(toIndentedString(tcBlueprintIds)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    vsBlueprintId: ").append(toIndentedString(vsBlueprintId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

