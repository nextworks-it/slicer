/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.eveportal.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ServiceConstraints
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-26T20:09:54.213Z")



public class ServiceConstraints {
  @SerializedName("atomicComponentId")
  private String atomicComponentId = null;

  @SerializedName("canIncludeSharedElements")
  private Boolean canIncludeSharedElements = null;

  @SerializedName("nonPreferredProviders")
  private List<String> nonPreferredProviders = null;

  @SerializedName("preferredProviders")
  private List<String> preferredProviders = null;

  /**
   * Gets or Sets priority
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    LOW("LOW"),
    
    MEDIUM("MEDIUM"),
    
    HIGH("HIGH");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String text) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PriorityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("priority")
  private PriorityEnum priority = null;

  @SerializedName("prohibitedProviders")
  private List<String> prohibitedProviders = null;

  @SerializedName("sharable")
  private Boolean sharable = null;

  public ServiceConstraints atomicComponentId(String atomicComponentId) {
    this.atomicComponentId = atomicComponentId;
    return this;
  }

   /**
   * Get atomicComponentId
   * @return atomicComponentId
  **/
  @ApiModelProperty(value = "")
  public String getAtomicComponentId() {
    return atomicComponentId;
  }

  public void setAtomicComponentId(String atomicComponentId) {
    this.atomicComponentId = atomicComponentId;
  }

  public ServiceConstraints canIncludeSharedElements(Boolean canIncludeSharedElements) {
    this.canIncludeSharedElements = canIncludeSharedElements;
    return this;
  }

   /**
   * Get canIncludeSharedElements
   * @return canIncludeSharedElements
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanIncludeSharedElements() {
    return canIncludeSharedElements;
  }

  public void setCanIncludeSharedElements(Boolean canIncludeSharedElements) {
    this.canIncludeSharedElements = canIncludeSharedElements;
  }

  public ServiceConstraints nonPreferredProviders(List<String> nonPreferredProviders) {
    this.nonPreferredProviders = nonPreferredProviders;
    return this;
  }

  public ServiceConstraints addNonPreferredProvidersItem(String nonPreferredProvidersItem) {
    if (this.nonPreferredProviders == null) {
      this.nonPreferredProviders = new ArrayList<String>();
    }
    this.nonPreferredProviders.add(nonPreferredProvidersItem);
    return this;
  }

   /**
   * Get nonPreferredProviders
   * @return nonPreferredProviders
  **/
  @ApiModelProperty(value = "")
  public List<String> getNonPreferredProviders() {
    return nonPreferredProviders;
  }

  public void setNonPreferredProviders(List<String> nonPreferredProviders) {
    this.nonPreferredProviders = nonPreferredProviders;
  }

  public ServiceConstraints preferredProviders(List<String> preferredProviders) {
    this.preferredProviders = preferredProviders;
    return this;
  }

  public ServiceConstraints addPreferredProvidersItem(String preferredProvidersItem) {
    if (this.preferredProviders == null) {
      this.preferredProviders = new ArrayList<String>();
    }
    this.preferredProviders.add(preferredProvidersItem);
    return this;
  }

   /**
   * Get preferredProviders
   * @return preferredProviders
  **/
  @ApiModelProperty(value = "")
  public List<String> getPreferredProviders() {
    return preferredProviders;
  }

  public void setPreferredProviders(List<String> preferredProviders) {
    this.preferredProviders = preferredProviders;
  }

  public ServiceConstraints priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }

  public ServiceConstraints prohibitedProviders(List<String> prohibitedProviders) {
    this.prohibitedProviders = prohibitedProviders;
    return this;
  }

  public ServiceConstraints addProhibitedProvidersItem(String prohibitedProvidersItem) {
    if (this.prohibitedProviders == null) {
      this.prohibitedProviders = new ArrayList<String>();
    }
    this.prohibitedProviders.add(prohibitedProvidersItem);
    return this;
  }

   /**
   * Get prohibitedProviders
   * @return prohibitedProviders
  **/
  @ApiModelProperty(value = "")
  public List<String> getProhibitedProviders() {
    return prohibitedProviders;
  }

  public void setProhibitedProviders(List<String> prohibitedProviders) {
    this.prohibitedProviders = prohibitedProviders;
  }

  public ServiceConstraints sharable(Boolean sharable) {
    this.sharable = sharable;
    return this;
  }

   /**
   * Get sharable
   * @return sharable
  **/
  @ApiModelProperty(value = "")
  public Boolean isSharable() {
    return sharable;
  }

  public void setSharable(Boolean sharable) {
    this.sharable = sharable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceConstraints serviceConstraints = (ServiceConstraints) o;
    return Objects.equals(this.atomicComponentId, serviceConstraints.atomicComponentId) &&
        Objects.equals(this.canIncludeSharedElements, serviceConstraints.canIncludeSharedElements) &&
        Objects.equals(this.nonPreferredProviders, serviceConstraints.nonPreferredProviders) &&
        Objects.equals(this.preferredProviders, serviceConstraints.preferredProviders) &&
        Objects.equals(this.priority, serviceConstraints.priority) &&
        Objects.equals(this.prohibitedProviders, serviceConstraints.prohibitedProviders) &&
        Objects.equals(this.sharable, serviceConstraints.sharable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atomicComponentId, canIncludeSharedElements, nonPreferredProviders, preferredProviders, priority, prohibitedProviders, sharable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceConstraints {\n");
    
    sb.append("    atomicComponentId: ").append(toIndentedString(atomicComponentId)).append("\n");
    sb.append("    canIncludeSharedElements: ").append(toIndentedString(canIncludeSharedElements)).append("\n");
    sb.append("    nonPreferredProviders: ").append(toIndentedString(nonPreferredProviders)).append("\n");
    sb.append("    preferredProviders: ").append(toIndentedString(preferredProviders)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    prohibitedProviders: ").append(toIndentedString(prohibitedProviders)).append("\n");
    sb.append("    sharable: ").append(toIndentedString(sharable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

