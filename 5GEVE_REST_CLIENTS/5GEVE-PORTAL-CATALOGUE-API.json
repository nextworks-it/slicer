{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8082",
  "basePath": "/",
  "tags": [
    {
      "name": "Context Blueprint Catalogue API",
      "description": "Ctx Blueprint Catalogue Rest Controller"
    },
    {
      "name": "Context Descriptor Catalogue API",
      "description": "Ctx Descriptor Catalogue Rest Controller"
    },
    {
      "name": "Experiment Blueprint Catalogue API",
      "description": "Exp Blueprint Catalogue Rest Controller"
    },
    {
      "name": "Experiment Descriptor Catalogue API",
      "description": "Exp Descriptor Catalogue Rest Controller"
    },
    {
      "name": "Test Case Blueprint Catalogue API",
      "description": "Test Blueprint Catalogue Rest Controller"
    },
    {
      "name": "Test Case Descriptor Catalogue API",
      "description": "Test Descriptor Catalogue Rest Controller"
    },
    {
      "name": "Vertical Service Blueprint Catalogue API",
      "description": "Vs Blueprint Catalogue Rest Controller"
    },
    {
      "name": "Vertical Service Descriptor Catalogue API",
      "description": "Vs Descriptor Catalogue Rest Controller"
    },
    {
      "name": "translator-rest-controller",
      "description": "Translator Rest Controller"
    }
  ],
  "paths": {
    "/portal/catalogue/ctxblueprint": {
      "get": {
        "tags": [
          "Context Blueprint Catalogue API"
        ],
        "summary": "Get ALL CtxBlueprints",
        "operationId": "getAllCtxBlueprintsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of all the CtxBlueprints of the user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CtxBlueprintInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/ctxblueprint/{ctxbId}": {
      "get": {
        "tags": [
          "Context Blueprint Catalogue API"
        ],
        "summary": "Get CtxBlueprint",
        "operationId": "getCtxBlueprintUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ctxbId",
            "in": "path",
            "description": "ctxbId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the context blueprint with the given ID",
            "schema": {
              "$ref": "#/definitions/CtxBlueprintInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/ctxdescriptor": {
      "get": {
        "tags": [
          "Context Descriptor Catalogue API"
        ],
        "summary": "getAllCtxDescriptors",
        "operationId": "getAllCtxDescriptorsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/ctxdescriptor/{ctxdId}": {
      "get": {
        "tags": [
          "Context Descriptor Catalogue API"
        ],
        "summary": "getCtxDescriptor",
        "operationId": "getCtxDescriptorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ctxdId",
            "in": "path",
            "description": "ctxdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/expblueprint": {
      "get": {
        "tags": [
          "Experiment Blueprint Catalogue API"
        ],
        "summary": "Get ALL ExpBlueprints",
        "operationId": "getAllExpBlueprintsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "string"
          },
          {
            "name": "vsbId",
            "in": "query",
            "description": "vsbId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve the list of all the experiment blueprints of the user",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/expblueprint/{expbId}": {
      "get": {
        "tags": [
          "Experiment Blueprint Catalogue API"
        ],
        "summary": "Get ExpBlueprint",
        "operationId": "getExpBlueprintUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "expbId",
            "in": "path",
            "description": "expbId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the experiment blueprint with the given ID",
            "schema": {
              "$ref": "#/definitions/ExpBlueprintInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/expdescriptor": {
      "get": {
        "tags": [
          "Experiment Descriptor Catalogue API"
        ],
        "summary": "getAllExpDescriptors",
        "operationId": "getAllExpDescriptorsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Experiment Descriptor Catalogue API"
        ],
        "summary": "Onboard Experiment Descriptor",
        "operationId": "createExpDescriptorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnboardExpDescriptorRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Element created. Returns the id of the element created.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/expdescriptor/{expdId}": {
      "get": {
        "tags": [
          "Experiment Descriptor Catalogue API"
        ],
        "summary": "getExpDescriptor",
        "operationId": "getExpDescriptorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "expdId",
            "in": "path",
            "description": "expdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/testcaseblueprint": {
      "get": {
        "tags": [
          "Test Case Blueprint Catalogue API"
        ],
        "summary": "Get ALL the Test Case Service Blueprints",
        "operationId": "getAllTestCaseBlueprintsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the Test Case Service Blueprints of the user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseBlueprintInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/testcaseblueprint/{tcbId}": {
      "get": {
        "tags": [
          "Test Case Blueprint Catalogue API"
        ],
        "summary": "Get a Test Case Blueprint with a given ID",
        "operationId": "getTcBlueprintUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tcbId",
            "in": "path",
            "description": "tcbId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test Case Blueprint with the given ID",
            "schema": {
              "$ref": "#/definitions/TestCaseBlueprintInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/testcasedescriptor": {
      "get": {
        "tags": [
          "Test Case Descriptor Catalogue API"
        ],
        "summary": "Query ALL the Test Case Descriptors",
        "operationId": "getAllTestCaseDescriptorsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the Test Case Descriptors of the user.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCaseDescriptor"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/testcasedescriptor/{tcdId}": {
      "get": {
        "tags": [
          "Test Case Descriptor Catalogue API"
        ],
        "summary": "Query a Test Case Descriptor with a given ID",
        "operationId": "getTcDescriptorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tcdId",
            "in": "path",
            "description": "tcdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the Test Case Descriptor with the given ID",
            "schema": {
              "$ref": "#/definitions/TestCaseDescriptor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/translator/expd/{expdId}": {},
    "/portal/catalogue/vsblueprint": {
      "get": {
        "tags": [
          "Vertical Service Blueprint Catalogue API"
        ],
        "summary": "Get ALL the Vertical Service Blueprints",
        "operationId": "getAllVsBlueprintsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "site",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the Vertical Service Blueprints of the user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VsBlueprintInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/vsblueprint/{vsbId}": {
      "get": {
        "tags": [
          "Vertical Service Blueprint Catalogue API"
        ],
        "summary": "Get a Vertical Service Blueprint with a given ID",
        "operationId": "getVsBlueprintUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vsbId",
            "in": "path",
            "description": "vsbId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Vertical Service Blueprint with the given ID",
            "schema": {
              "$ref": "#/definitions/VsBlueprintInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/vsdescriptor": {
      "get": {
        "tags": [
          "Vertical Service Descriptor Catalogue API"
        ],
        "summary": "Query ALL the Vertical Service Descriptor",
        "operationId": "getAllVsDescriptorsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the Vertical Service Descriptor of the user.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VsDescriptor"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Vertical Service Descriptor Catalogue API"
        ],
        "summary": "Onboard a new Vertical Service Descriptor",
        "operationId": "createVsDescriptorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnboardVsDescriptorRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Vertical Service Descriptor.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/portal/catalogue/vsdescriptor/{vsdId}": {
      "get": {
        "tags": [
          "Vertical Service Descriptor Catalogue API"
        ],
        "summary": "Query a Vertical Service Descriptor with a given ID",
        "operationId": "getVsDescriptorUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vsdId",
            "in": "path",
            "description": "vsdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the Vertical Service Descriptor with the given ID",
            "schema": {
              "$ref": "#/definitions/VsDescriptor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AddressData": {
      "type": "object",
      "properties": {
        "addressType": {
          "type": "string",
          "enum": [
            "MAC_ADDRESS",
            "IP_ADDRESS"
          ]
        },
        "floatingIpActivated": {
          "type": "boolean"
        },
        "iPAddressAssignment": {
          "type": "boolean"
        },
        "iPAddressType": {
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6"
          ]
        },
        "management": {
          "type": "boolean"
        },
        "numberOfIpAddress": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AddressData"
    },
    "AffinityOrAntiAffinityGroup": {
      "type": "object",
      "properties": {
        "affinityOrAntiAffinity": {
          "type": "string",
          "enum": [
            "AFFINITY",
            "ANTI_AFFINITY"
          ]
        },
        "groupId": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": [
            "NFVI_NODE",
            "NFVI_POP",
            "ZONE",
            "ZONE_GROUP"
          ]
        }
      },
      "title": "AffinityOrAntiAffinityGroup"
    },
    "AffinityRule": {
      "type": "object",
      "properties": {
        "affinityOrAntiAffinity": {
          "type": "string",
          "enum": [
            "AFFINITY",
            "ANTI_AFFINITY"
          ]
        },
        "scope": {
          "type": "string",
          "enum": [
            "NFVI_NODE",
            "NFVI_POP",
            "ZONE",
            "ZONE_GROUP"
          ]
        }
      },
      "title": "AffinityRule"
    },
    "ApplicationMetric": {
      "type": "object",
      "properties": {
        "interval": {
          "type": "string"
        },
        "metricCollectionType": {
          "type": "string",
          "enum": [
            "CUMULATIVE",
            "DELTA",
            "GAUGE"
          ]
        },
        "metricGraphType": {
          "type": "string",
          "enum": [
            "LINE",
            "PIE",
            "COUNTER",
            "GAUGE"
          ]
        },
        "metricId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "title": "ApplicationMetric"
    },
    "AutoscalingAction": {
      "type": "object",
      "properties": {
        "scaleNsToLevelData": {
          "$ref": "#/definitions/ScaleNsToLevelData"
        },
        "scaleType": {
          "type": "string",
          "enum": [
            "SCALE_NS",
            "SCALE_VNF"
          ]
        }
      },
      "title": "AutoscalingAction"
    },
    "AutoscalingRuleCondition": {
      "type": "object",
      "properties": {
        "cooldownTime": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "initialInstantiationLevel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scaleInOperationType": {
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        },
        "scaleOutOperationType": {
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        },
        "scalingCriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscalingRuleCriteria"
          }
        },
        "scalingType": {
          "type": "string",
          "enum": [
            "MANUAL_SCALING",
            "AUTOMATED_SCALING"
          ]
        },
        "thresholdTime": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AutoscalingRuleCondition"
    },
    "AutoscalingRuleCriteria": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "nsMonitoringParamRef": {
          "type": "string"
        },
        "scaleInRelationalOperation": {
          "type": "string",
          "enum": [
            "GE",
            "LE",
            "GT",
            "LT",
            "EQ"
          ]
        },
        "scaleInThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "scaleOutRelationalOperation": {
          "type": "string",
          "enum": [
            "GE",
            "LE",
            "GT",
            "LT",
            "EQ"
          ]
        },
        "scaleOutThreshold": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AutoscalingRuleCriteria"
    },
    "BlueprintUserInformation": {
      "type": "object",
      "properties": {
        "blueprintId": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "BlueprintUserInformation"
    },
    "ConnectivityType": {
      "type": "object",
      "properties": {
        "flowPattern": {
          "type": "string"
        },
        "layerProtocol": {
          "type": "string",
          "enum": [
            "ETHERNET",
            "MPLS",
            "ODU2",
            "IPV4",
            "IPV6",
            "PSEUDO_WIRE",
            "OTSIA",
            "OCH",
            "OTU",
            "ODU",
            "SDM",
            "AROF",
            "NOT_SPECIFIED"
          ]
        }
      },
      "title": "ConnectivityType"
    },
    "CtxBlueprint": {
      "type": "object",
      "properties": {
        "applicationMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationMetric"
          }
        },
        "atomicComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsComponent"
          }
        },
        "blueprintId": {
          "type": "string"
        },
        "compatibleSites": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITALY_TURIN",
              "SPAIN_5TONIC",
              "FRANCE_PARIS",
              "FRANCE_NICE",
              "FRANCE_RENNES",
              "GREECE_ATHENS"
            ]
          }
        },
        "compositionStrategy": {
          "type": "string",
          "enum": [
            "PASS_THROUGH",
            "CONNECT"
          ]
        },
        "configurableParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectivityServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbLink"
          }
        },
        "description": {
          "type": "string"
        },
        "endPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbEndpoint"
          }
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsBlueprintParameter"
          }
        },
        "serviceSequence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbForwardingPathHop"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "title": "CtxBlueprint"
    },
    "CtxBlueprintInfo": {
      "type": "object",
      "properties": {
        "activeCtxdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ctxBlueprint": {
          "$ref": "#/definitions/CtxBlueprint"
        },
        "ctxBlueprintId": {
          "type": "string"
        },
        "ctxBlueprintVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "onBoardedNsdInfoId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string"
        }
      },
      "title": "CtxBlueprintInfo"
    },
    "Dependencies": {
      "type": "object",
      "properties": {
        "primaryId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Dependencies"
    },
    "ExpBlueprint": {
      "type": "object",
      "properties": {
        "ctxBlueprintIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "ON_DEMAND",
            "STATIC"
          ]
        },
        "description": {
          "type": "string"
        },
        "expBlueprintId": {
          "type": "string"
        },
        "kpis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyPerformanceIndicator"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureMetric"
          }
        },
        "name": {
          "type": "string"
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITALY_TURIN",
              "SPAIN_5TONIC",
              "FRANCE_PARIS",
              "FRANCE_NICE",
              "FRANCE_RENNES",
              "GREECE_ATHENS"
            ]
          }
        },
        "tcBlueprintIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string"
        },
        "vsBlueprintId": {
          "type": "string"
        }
      },
      "title": "ExpBlueprint"
    },
    "ExpBlueprintInfo": {
      "type": "object",
      "properties": {
        "activeExpdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expBlueprint": {
          "$ref": "#/definitions/ExpBlueprint"
        },
        "expBlueprintId": {
          "type": "string"
        },
        "expBlueprintVersion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "onBoardedNsdInfoId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExpBlueprintInfo"
    },
    "InfrastructureMetric": {
      "type": "object",
      "properties": {
        "iMetricType": {
          "type": "string",
          "enum": [
            "USER_DATA_RATE_DOWNLINK",
            "USER_DATA_RATE_UPLINK",
            "CAPACITY",
            "LATENCY_USERPLANE",
            "LATENCY_CONTROLPLANE",
            "DEVICE_DENSITY",
            "MOBILITY"
          ]
        },
        "interval": {
          "type": "string"
        },
        "metricCollectionType": {
          "type": "string",
          "enum": [
            "CUMULATIVE",
            "DELTA",
            "GAUGE"
          ]
        },
        "metricGraphType": {
          "type": "string",
          "enum": [
            "LINE",
            "PIE",
            "COUNTER",
            "GAUGE"
          ]
        },
        "metricId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "title": "InfrastructureMetric"
    },
    "KeyPerformanceIndicator": {
      "type": "object",
      "properties": {
        "formula": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "kpiGraphType": {
          "type": "string",
          "enum": [
            "LINE",
            "PIE",
            "COUNTER",
            "GAUGE"
          ]
        },
        "kpiId": {
          "type": "string"
        },
        "metricIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        }
      },
      "title": "KeyPerformanceIndicator"
    },
    "KpiThreshold": {
      "type": "object",
      "properties": {
        "lowerBound": {
          "type": "integer",
          "format": "int32"
        },
        "upperBound": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "KpiThreshold"
    },
    "LifeCycleManagementScript": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "START_VNF_INSTANTIATION",
              "END_VNF_INSTANTIATION",
              "START_VNF_SCALING",
              "END_VNF_SCALING",
              "START_VNF_HEALING",
              "END_VNF_HEALING",
              "START_VNF_TERMINATION",
              "END_VNF_TERMINATION",
              "START_VNF_FLAVOUR_CHANGE",
              "END_VNF_FLAVOUR_CHANGE",
              "START_VNF_OP_STATE_CHANGE",
              "END_VNF_OP_STATE_CHANGE",
              "START_CHANGE_VNF_EXTERNAL_CONNECTIVITY",
              "END_CHANGE_VNF_EXTERNAL_CONNECTIVITY",
              "RECEIVED_MSG_VNF_INSTANTIATE",
              "RECEIVED_MSG_VNF_SCALE",
              "RECEIVED_MSG_VNF_HEAL",
              "RECEIVED_MSG_VNF_TERMINATE",
              "RECEIVED_MSG_CHANGE_VNF_FLAVOUR",
              "RECEIVED_MSG_CHANGE_VNF_EXTERNAL_CONNECTIVITY",
              "RECEIVED_MSG_CHANGE_VNF_OP_STATE",
              "RECEIVED_MSG_VNF_CHANGE_INDICATION",
              "START_NS_INSTANTIATION",
              "END_NS_INSTANTIATION",
              "START_NS_SCALING",
              "END_NS_SCALING",
              "START_NS_HEALING",
              "END_NS_HEALING",
              "START_NS_TERMINATION",
              "END_NS_TERMINATION",
              "START_NS_UPDATE",
              "END_NS_UPDATE",
              "RECEIVED_MSG_NS_INSTANTIATE",
              "RECEIVED_MSG_NS_SCALE",
              "RECEIVED_MSG_NS_HEAL",
              "RECEIVED_MSG_NS_TERMINATE",
              "RECEIVED_MSG_NS_UPDATE"
            ]
          }
        },
        "script": {
          "type": "string"
        }
      },
      "title": "LifeCycleManagementScript"
    },
    "LinkBitrateRequirements": {
      "type": "object",
      "properties": {
        "leaf": {
          "type": "string"
        },
        "root": {
          "type": "string"
        }
      },
      "title": "LinkBitrateRequirements"
    },
    "MonitoredData": {
      "type": "object",
      "properties": {
        "monitoringParameter": {
          "$ref": "#/definitions/MonitoringParameter"
        },
        "vnfIndicatorInfo": {
          "$ref": "#/definitions/VnfIndicatorData"
        }
      },
      "title": "MonitoredData"
    },
    "MonitoringParameter": {
      "type": "object",
      "properties": {
        "monitoringParameterId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "performanceMetric": {
          "type": "string"
        }
      },
      "title": "MonitoringParameter"
    },
    "Nfpd": {
      "type": "object",
      "properties": {
        "cpd": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nfpId": {
          "type": "string"
        },
        "nfpRule": {
          "$ref": "#/definitions/Rule"
        },
        "qos": {
          "$ref": "#/definitions/QoS"
        }
      },
      "title": "Nfpd"
    },
    "NsAutoscalingRule": {
      "type": "object",
      "properties": {
        "ruleActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscalingAction"
          }
        },
        "ruleCondition": {
          "$ref": "#/definitions/AutoscalingRuleCondition"
        },
        "ruleId": {
          "type": "string"
        }
      },
      "title": "NsAutoscalingRule"
    },
    "NsDf": {
      "type": "object",
      "properties": {
        "affinityOrAntiAffinityGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AffinityOrAntiAffinityGroup"
          }
        },
        "defaultNsInstantiationLevelId": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dependencies"
          }
        },
        "flavourKey": {
          "type": "string"
        },
        "nsDfId": {
          "type": "string"
        },
        "nsInstantiationLevel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsLevel"
          }
        },
        "nsProfile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsProfile"
          }
        },
        "pnfProfile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PnfProfile"
          }
        },
        "scalingAspect": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsScalingAspect"
          }
        },
        "virtualLinkProfile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualLinkProfile"
          }
        },
        "vnfProfile": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnfProfile"
          }
        }
      },
      "title": "NsDf"
    },
    "NsLevel": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "nsLevelId": {
          "type": "string"
        },
        "nsToLevelMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsToLevelMapping"
          }
        },
        "virtualLinkToLevelMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualLinkToLevelMapping"
          }
        },
        "vnfToLevelMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnfToLevelMapping"
          }
        }
      },
      "title": "NsLevel"
    },
    "NsProfile": {
      "type": "object",
      "properties": {
        "affinityOrAntiaffinityGroupId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxNumberOfInstances": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfInstances": {
          "type": "integer",
          "format": "int32"
        },
        "nsDfId": {
          "type": "string"
        },
        "nsInstantiationLevelId": {
          "type": "string"
        },
        "nsProfileId": {
          "type": "string"
        },
        "nsVirtualLinkConnectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsVirtualLinkConnectivity"
          }
        },
        "nsdId": {
          "type": "string"
        }
      },
      "title": "NsProfile"
    },
    "NsScaleInfo": {
      "type": "object",
      "properties": {
        "nsScaleLevelId": {
          "type": "string"
        },
        "nsScalingAspectId": {
          "type": "string"
        }
      },
      "title": "NsScaleInfo"
    },
    "NsScalingAspect": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nsScaleLevel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsLevel"
          }
        },
        "nsScalingAspectId": {
          "type": "string"
        }
      },
      "title": "NsScalingAspect"
    },
    "NsToLevelMapping": {
      "type": "object",
      "properties": {
        "nsProfileId": {
          "type": "string"
        },
        "numberOfInstances": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "NsToLevelMapping"
    },
    "NsVirtualLinkConnectivity": {
      "type": "object",
      "properties": {
        "cpdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "virtualLinkProfileId": {
          "type": "string"
        }
      },
      "title": "NsVirtualLinkConnectivity"
    },
    "NsVirtualLinkDesc": {
      "type": "object",
      "properties": {
        "connectivityType": {
          "$ref": "#/definitions/ConnectivityType"
        },
        "description": {
          "type": "string"
        },
        "security": {
          "$ref": "#/definitions/SecurityParameters"
        },
        "testAccess": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "virtuaLinkDescVersion": {
          "type": "string"
        },
        "virtualLinkDescId": {
          "type": "string"
        },
        "virtualLinkDescProvider": {
          "type": "string"
        },
        "virtualLinkDf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualLinkDf"
          }
        }
      },
      "title": "NsVirtualLinkDesc"
    },
    "Nsd": {
      "type": "object",
      "properties": {
        "autoScalingRule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsAutoscalingRule"
          }
        },
        "designer": {
          "type": "string"
        },
        "lifeCycleManagementScript": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LifeCycleManagementScript"
          }
        },
        "monitoredInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredData"
          }
        },
        "nestedNsdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nsDf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsDf"
          }
        },
        "nsdIdentifier": {
          "type": "string"
        },
        "nsdInvariantId": {
          "type": "string"
        },
        "nsdName": {
          "type": "string"
        },
        "pnfdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sapd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sapd"
          }
        },
        "security": {
          "$ref": "#/definitions/SecurityParameters"
        },
        "version": {
          "type": "string"
        },
        "virtualLinkDesc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsVirtualLinkDesc"
          }
        },
        "vnfdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vnffgd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vnffgd"
          }
        }
      },
      "title": "Nsd"
    },
    "OnBoardVsBlueprintRequest": {
      "type": "object",
      "properties": {
        "nsds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nsd"
          }
        },
        "translationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsdNsdTranslationRule"
          }
        },
        "vsBlueprint": {
          "$ref": "#/definitions/VsBlueprint"
        }
      },
      "title": "OnBoardVsBlueprintRequest"
    },
    "OnboardCtxBlueprintRequest": {
      "type": "object",
      "properties": {
        "ctxBlueprint": {
          "$ref": "#/definitions/CtxBlueprint"
        },
        "nsds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nsd"
          }
        },
        "translationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsdNsdTranslationRule"
          }
        }
      },
      "title": "OnboardCtxBlueprintRequest"
    },
    "OnboardExpBlueprintRequest": {
      "type": "object",
      "properties": {
        "expBlueprint": {
          "$ref": "#/definitions/ExpBlueprint"
        },
        "nsds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nsd"
          }
        },
        "translationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsdNsdTranslationRule"
          }
        }
      },
      "title": "OnboardExpBlueprintRequest"
    },
    "OnboardExpDescriptorRequest": {
      "type": "object",
      "properties": {
        "contextDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintUserInformation"
          }
        },
        "experimentBlueprintId": {
          "type": "string"
        },
        "kpiThresholds": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/KpiThreshold"
          }
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string"
        },
        "testCaseConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintUserInformation"
          }
        },
        "version": {
          "type": "string"
        },
        "vsDescriptor": {
          "$ref": "#/definitions/VsDescriptor"
        }
      },
      "title": "OnboardExpDescriptorRequest"
    },
    "OnboardTestCaseBlueprintRequest": {
      "type": "object",
      "properties": {
        "testCaseBlueprint": {
          "$ref": "#/definitions/TestCaseBlueprint"
        }
      },
      "title": "OnboardTestCaseBlueprintRequest"
    },
    "OnboardVsDescriptorRequest": {
      "type": "object",
      "properties": {
        "public": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string"
        },
        "vsd": {
          "$ref": "#/definitions/VsDescriptor"
        }
      },
      "title": "OnboardVsDescriptorRequest"
    },
    "PnfProfile": {
      "type": "object",
      "properties": {
        "pnfProfileId": {
          "type": "string"
        },
        "pnfVirtualLinkConnectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsVirtualLinkConnectivity"
          }
        },
        "pnfdId": {
          "type": "string"
        }
      },
      "title": "PnfProfile"
    },
    "QoS": {
      "type": "object",
      "properties": {
        "latency": {
          "type": "integer",
          "format": "int32"
        },
        "packetDelayVariation": {
          "type": "integer",
          "format": "int32"
        },
        "packetLossRatio": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "QoS"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "Rule": {
      "type": "object",
      "title": "Rule"
    },
    "Sapd": {
      "type": "object",
      "properties": {
        "addressData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressData"
          }
        },
        "associatedCpdId": {
          "type": "string"
        },
        "cpRole": {
          "type": "string",
          "enum": [
            "ROOT",
            "LEAF"
          ]
        },
        "cpdId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "layerProtocol": {
          "type": "string",
          "enum": [
            "ETHERNET",
            "MPLS",
            "ODU2",
            "IPV4",
            "IPV6",
            "PSEUDO_WIRE",
            "OTSIA",
            "OCH",
            "OTU",
            "ODU",
            "SDM",
            "AROF",
            "NOT_SPECIFIED"
          ]
        },
        "nsVirtualLinkDescId": {
          "type": "string"
        },
        "sapAddressAssignment": {
          "type": "boolean"
        }
      },
      "title": "Sapd"
    },
    "ScaleNsToLevelData": {
      "type": "object",
      "properties": {
        "nsInstantiationLevel": {
          "type": "string"
        },
        "nsScaleInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsScaleInfo"
          }
        }
      },
      "title": "ScaleNsToLevelData"
    },
    "SecurityParameters": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      },
      "title": "SecurityParameters"
    },
    "ServiceConstraints": {
      "type": "object",
      "properties": {
        "atomicComponentId": {
          "type": "string"
        },
        "canIncludeSharedElements": {
          "type": "boolean"
        },
        "nonPreferredProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preferredProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "prohibitedProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sharable": {
          "type": "boolean"
        }
      },
      "title": "ServiceConstraints"
    },
    "TestCaseBlueprint": {
      "type": "object",
      "properties": {
        "configurationScript": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "executionScript": {
          "type": "string"
        },
        "infrastructureParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "resetConfigScript": {
          "type": "string"
        },
        "testcaseBlueprintId": {
          "type": "string"
        },
        "userParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "title": "TestCaseBlueprint"
    },
    "TestCaseBlueprintInfo": {
      "type": "object",
      "properties": {
        "activeTcdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "testCaseBlueprint": {
          "$ref": "#/definitions/TestCaseBlueprint"
        },
        "testCaseBlueprintId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "TestCaseBlueprintInfo"
    },
    "TestCaseDescriptor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "testCaseBlueprintId": {
          "type": "string"
        },
        "testCaseDescriptorId": {
          "type": "string"
        },
        "userParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "title": "TestCaseDescriptor"
    },
    "VirtualLinkDf": {
      "type": "object",
      "properties": {
        "flavourId": {
          "type": "string"
        },
        "qos": {
          "$ref": "#/definitions/QoS"
        },
        "serviceAvaibilityLevel": {
          "type": "string",
          "enum": [
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_3"
          ]
        }
      },
      "title": "VirtualLinkDf"
    },
    "VirtualLinkProfile": {
      "type": "object",
      "properties": {
        "affinityOrAntiAffinityGroupId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flavourId": {
          "type": "string"
        },
        "localAffinityOrAntiAffinityRule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AffinityRule"
          }
        },
        "maxBitrateRequirements": {
          "$ref": "#/definitions/LinkBitrateRequirements"
        },
        "minBitrateRequirements": {
          "$ref": "#/definitions/LinkBitrateRequirements"
        },
        "virtualLinkDescId": {
          "type": "string"
        },
        "virtualLinkProfileId": {
          "type": "string"
        }
      },
      "title": "VirtualLinkProfile"
    },
    "VirtualLinkToLevelMapping": {
      "type": "object",
      "properties": {
        "bitRateRequirements": {
          "$ref": "#/definitions/LinkBitrateRequirements"
        },
        "virtualLinkProfileId": {
          "type": "string"
        }
      },
      "title": "VirtualLinkToLevelMapping"
    },
    "VnfIndicatorData": {
      "type": "object",
      "properties": {
        "vnfIndicator": {
          "type": "string"
        },
        "vnfdId": {
          "type": "string"
        }
      },
      "title": "VnfIndicatorData"
    },
    "VnfLCMScripts": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        }
      },
      "title": "VnfLCMScripts"
    },
    "VnfProfile": {
      "type": "object",
      "properties": {
        "affinityOrAntiAffinityGroupId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flavourId": {
          "type": "string"
        },
        "instantiationLevel": {
          "type": "string"
        },
        "localAffinityOrAntiAffinityRule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AffinityRule"
          }
        },
        "maxNumberOfInstances": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfInstances": {
          "type": "integer",
          "format": "int32"
        },
        "nsVirtualLinkConnectivity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsVirtualLinkConnectivity"
          }
        },
        "script": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnfLCMScripts"
          }
        },
        "vnfProfileId": {
          "type": "string"
        },
        "vnfdId": {
          "type": "string"
        }
      },
      "title": "VnfProfile"
    },
    "VnfToLevelMapping": {
      "type": "object",
      "properties": {
        "numberOfInstances": {
          "type": "integer",
          "format": "int32"
        },
        "vnfProfileId": {
          "type": "string"
        }
      },
      "title": "VnfToLevelMapping"
    },
    "Vnffgd": {
      "type": "object",
      "properties": {
        "cpdPoolId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nfpd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nfpd"
          }
        },
        "pnfdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "virtualLinkDescId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vnfdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vnffgdId": {
          "type": "string"
        }
      },
      "title": "Vnffgd"
    },
    "VsBlueprint": {
      "type": "object",
      "properties": {
        "applicationMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationMetric"
          }
        },
        "atomicComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsComponent"
          }
        },
        "blueprintId": {
          "type": "string"
        },
        "compatibleContextBlueprint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compatibleSites": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ITALY_TURIN",
              "SPAIN_5TONIC",
              "FRANCE_PARIS",
              "FRANCE_NICE",
              "FRANCE_RENNES",
              "GREECE_ATHENS"
            ]
          }
        },
        "configurableParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectivityServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbLink"
          }
        },
        "description": {
          "type": "string"
        },
        "endPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbEndpoint"
          }
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsBlueprintParameter"
          }
        },
        "serviceSequence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbForwardingPathHop"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "title": "VsBlueprint"
    },
    "VsBlueprintInfo": {
      "type": "object",
      "properties": {
        "activeVsdId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "onBoardedMecAppPackageInfoId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onBoardedNsdInfoId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onBoardedVnfPackageInfoId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vsBlueprint": {
          "$ref": "#/definitions/VsBlueprint"
        },
        "vsBlueprintId": {
          "type": "string"
        },
        "vsBlueprintVersion": {
          "type": "string"
        }
      },
      "title": "VsBlueprintInfo"
    },
    "VsBlueprintParameter": {
      "type": "object",
      "properties": {
        "applicabilityField": {
          "type": "string"
        },
        "parameterDescription": {
          "type": "string"
        },
        "parameterId": {
          "type": "string"
        },
        "parameterName": {
          "type": "string"
        },
        "parameterType": {
          "type": "string"
        }
      },
      "title": "VsBlueprintParameter"
    },
    "VsComponent": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string"
        },
        "endPointsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imagesUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lifecycleOperations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nfvId": {
          "type": "string"
        },
        "placement": {
          "type": "string",
          "enum": [
            "EDGE",
            "UE",
            "CLOUD"
          ]
        },
        "serversNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VsComponent"
    },
    "VsDescriptor": {
      "type": "object",
      "properties": {
        "managementType": {
          "type": "string",
          "enum": [
            "PROVIDER_MANAGED",
            "TENANT_MANAGED"
          ]
        },
        "name": {
          "type": "string"
        },
        "qosParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceConstraints"
          }
        },
        "sla": {
          "$ref": "#/definitions/VsdSla"
        },
        "sst": {
          "type": "string",
          "enum": [
            "NONE",
            "EMBB",
            "URLLC",
            "M_IOT",
            "ENTERPRISE",
            "NFV_IAAS"
          ]
        },
        "version": {
          "type": "string"
        },
        "vsBlueprintId": {
          "type": "string"
        },
        "vsDescriptorId": {
          "type": "string"
        }
      },
      "title": "VsDescriptor"
    },
    "VsbEndpoint": {
      "type": "object",
      "properties": {
        "endPointId": {
          "type": "string"
        },
        "external": {
          "type": "boolean"
        },
        "management": {
          "type": "boolean"
        },
        "ranConnection": {
          "type": "boolean"
        }
      },
      "title": "VsbEndpoint"
    },
    "VsbForwardingPathEndPoint": {
      "type": "object",
      "properties": {
        "endPointId": {
          "type": "string"
        },
        "vsComponentId": {
          "type": "string"
        }
      },
      "title": "VsbForwardingPathEndPoint"
    },
    "VsbForwardingPathHop": {
      "type": "object",
      "properties": {
        "hopEndPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsbForwardingPathEndPoint"
          }
        }
      },
      "title": "VsbForwardingPathHop"
    },
    "VsbLink": {
      "type": "object",
      "properties": {
        "connectivityProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endPointIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external": {
          "type": "boolean"
        },
        "management": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "VsbLink"
    },
    "VsdNsdTranslationRule": {
      "type": "object",
      "properties": {
        "blueprintId": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VsdParameterValueRange"
          }
        },
        "nsFlavourId": {
          "type": "string"
        },
        "nsInstantiationLevelId": {
          "type": "string"
        },
        "nsdId": {
          "type": "string"
        },
        "nsdVersion": {
          "type": "string"
        },
        "nstId": {
          "type": "string"
        }
      },
      "title": "VsdNsdTranslationRule"
    },
    "VsdParameterValueRange": {
      "type": "object",
      "properties": {
        "maxValue": {
          "type": "integer",
          "format": "int32"
        },
        "minValue": {
          "type": "integer",
          "format": "int32"
        },
        "parameterId": {
          "type": "string"
        }
      },
      "title": "VsdParameterValueRange"
    },
    "VsdSla": {
      "type": "object",
      "properties": {
        "availabilityCoverage": {
          "type": "string",
          "enum": [
            "AVAILABILITY_COVERAGE_HIGH",
            "AVAILABILITY_COVERAGE_MEDIUM",
            "UNDEFINED"
          ]
        },
        "lowCostRequired": {
          "type": "boolean"
        },
        "serviceCreationTime": {
          "type": "string",
          "enum": [
            "SERVICE_CREATION_TIME_LOW",
            "SERVICE_CREATION_TIME_MEDIUM",
            "UNDEFINED"
          ]
        }
      },
      "title": "VsdSla"
    }
  }
}
