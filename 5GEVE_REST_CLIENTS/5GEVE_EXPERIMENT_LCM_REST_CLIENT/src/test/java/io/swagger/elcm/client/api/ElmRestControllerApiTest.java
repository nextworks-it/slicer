/*
 * 5GEVE Experiment LCM
 * The API of the 5GEVE Experiment Lifecycle Manager
 *
 * OpenAPI spec version: 1.0
 * Contact: info@nextworks.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.elcm.client.api;

import io.swagger.elcm.client.ApiException;
import io.swagger.elcm.client.model.ExecuteExperimentRequest;
import io.swagger.elcm.client.model.Experiment;
import io.swagger.elcm.client.model.ExperimentSchedulingRequest;
import io.swagger.elcm.client.model.ModifyExperimentTimeslotRequest;
import io.swagger.elcm.client.model.UpdateExperimentStatusRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for ElmRestControllerApi
 */
@Ignore
public class ElmRestControllerApiTest {

    private final ElmRestControllerApi api = new ElmRestControllerApi();

    
    /**
     * Request experiment schedule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createExperimentUsingPOSTTest() throws ApiException {
        ExperimentSchedulingRequest request = null;
        Boolean authenticated = null;
        String authorities0Authority = null;
        String response = api.createExperimentUsingPOST(request, authenticated, authorities0Authority);

        // TODO: test validations
    }
    
    /**
     * Delete experiment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteExperimentUsingDELETETest() throws ApiException {
        String expId = null;
        Boolean authenticated = null;
        String authorities0Authority = null;
        Object response = api.deleteExperimentUsingDELETE(expId, authenticated, authorities0Authority);

        // TODO: test validations
    }
    
    /**
     * Retrieve list of experiments
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllExperimentsUsingGETTest() throws ApiException {
        Boolean authenticated = null;
        String authorities0Authority = null;
        String expDId = null;
        String expId = null;
        List<Experiment> response = api.getAllExperimentsUsingGET(authenticated, authorities0Authority, expDId, expId);

        // TODO: test validations
    }
    
    /**
     * Request experiment action
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestExperimentActionUsingPOSTTest() throws ApiException {
        String action = null;
        String expId = null;
        Boolean authenticated = null;
        String authorities0Authority = null;
        ExecuteExperimentRequest request = null;
        api.requestExperimentActionUsingPOST(action, expId, authenticated, authorities0Authority, request);

        // TODO: test validations
    }
    
    /**
     * Update experiment status
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateExperimentStatusUsingPUTTest() throws ApiException {
        String expId = null;
        UpdateExperimentStatusRequest request = null;
        Boolean authenticated = null;
        String authorities0Authority = null;
        api.updateExperimentStatusUsingPUT(expId, request, authenticated, authorities0Authority);

        // TODO: test validations
    }
    
    /**
     * Update experiment timeslot
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateExperimentTimeslotUsingPUTTest() throws ApiException {
        String expId = null;
        ModifyExperimentTimeslotRequest request = null;
        Boolean authenticated = null;
        String authorities0Authority = null;
        api.updateExperimentTimeslotUsingPUT(expId, request, authenticated, authorities0Authority);

        // TODO: test validations
    }
    
}
